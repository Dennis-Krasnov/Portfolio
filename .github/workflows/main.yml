name: Build and Deploy CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build -t registry.digitalocean.com/krasnov/portfolio-web:$GITHUB_RUN_NUMBER .
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push Docker image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/krasnov/portfolio-web:$GITHUB_RUN_NUMBER
  
  deploy-kubernetes:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save personal

    - name: Upgrade helm chart
      run: helm upgrade --install portfolio-web ./helm --set runNumber=$GITHUB_RUN_NUMBER --wait

  profile:
    needs: deploy-kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: https://krasnov.dev
          uploadArtifacts: true

  build-deploy-functions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: |
          cd functions
          npm install
      
      - name: Update SendGrid API key
        uses: w9jds/firebase-action@v1.5.0
        with:
          args: functions:config:set sendgrid.api_key="${{ secrets.SENDGRID_API_KEY }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to Firebase Functions
        uses: w9jds/firebase-action@v1.5.0
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}