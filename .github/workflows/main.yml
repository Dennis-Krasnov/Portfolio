name: Continuous Integration and Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build OCI image
      run: |
        export SVELTE_BUNDLE=$(mktemp -d -t "$(date +%Y-%m-%d-%H-%M-%S)-XXXXXXXXXX")
        ./scripts/generate-svelte-bundle.sh
        ./scripts/build-nginx-image.sh

    - name: Archive local OCI iamge
      run: buildah push portfolio-web oci:/tmp/portfolio-web:portfolio-web

    - name: Upload local OCI image
      uses: actions/upload-artifact@v2
      with:
        name: portfolio-web-image
        path: /tmp/portfolio-web

  smoke-test:
    needs: build
    runs-on: ubuntu-latest
    env:
      PORT: 8080
    steps:
      - name: Download local OCI image
        uses: actions/download-artifact@v2
        with:
          name: portfolio-web-image
          path: /tmp/portfolio-web

      - name: debug
        run: |
          buildah images
          ls -l /tmp/portfolio-web

      - name: Restore local OCI image
        run: buildah pull oci:/tmp/portfolio-web

      - name: Smoke test
        run: |
          buildah images
          podman run --rm -d -p $PORT:8080 portfolio-web
          sleep 1
          python scripts/smoke-test.py

  check-vulnerability:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Hello
        run: echo hello

      # TODO: https://github.com/aquasecurity/trivy-action

  push:
    needs: [ smoke-test, check-vulnerability ]
    if: github.ref == 'refs/tags/release'
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: registry.digitalocean.com/krasnov/portfolio-web
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Download local OCI image
        uses: actions/download-artifact@v2
        with:
          name: portfolio-web-image
          path: /tmp/portfolio-web

      - name: Restore local OCI image
        run: buildah pull oci:/tmp/portfolio-web

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push OCI image to DigitalOcean Container Registry
        run: buildah push portfolio-web $IMAGE_NAME:$IMAGE_TAG

  deploy:
    needs: push
    if: github.ref == 'refs/tags/release'
    runs-on: ubuntu-latest
    steps:
      - name: Hello
        run: echo hello